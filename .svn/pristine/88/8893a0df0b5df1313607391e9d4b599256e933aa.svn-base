/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.anritsu.mcrepositorymanager.dbbeans;

import java.io.Serializable;
import java.util.Collection;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;

/**
 *
 * @author ro100051
 */
@Entity
@Table(name = "mc_availabilities")
@XmlRootElement
@NamedQueries({
    @NamedQuery(name = "DBMcAvailabilities.findAll", query = "SELECT d FROM DBMcAvailabilities d"),
    @NamedQuery(name = "DBMcAvailabilities.findByAvailabilityId", query = "SELECT d FROM DBMcAvailabilities d WHERE d.availabilityId = :availabilityId"),
    @NamedQuery(name = "DBMcAvailabilities.findByMcVersion", query = "SELECT d FROM DBMcAvailabilities d WHERE d.mcVersion = :mcVersion"),
    @NamedQuery(name = "DBMcAvailabilities.findByAvailability", query = "SELECT d FROM DBMcAvailabilities d WHERE d.availability = :availability")})
public class DBMcAvailabilities implements Serializable {

    private static final long serialVersionUID = 1L;
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Basic(optional = false)
    @Column(name = "availability_id")
    private Integer availabilityId;
    @Basic(optional = false)
    @Column(name = "mc_version")
    private String mcVersion;
    @Basic(optional = false)
    @Column(name = "availability")
    private String availability;
    @OneToMany(mappedBy = "availabilityId")
    private Collection<DBMcDependencies> dBMcDependenciesCollection;
    @OneToMany(mappedBy = "availabilityId")
    private Collection<DBMcCustomers> dBMcCustomersCollection;
    @JoinColumn(name = "release_id", referencedColumnName = "release_id")
    @ManyToOne
    private DBMcReleases releaseId;

    public DBMcAvailabilities() {
    }

    public DBMcAvailabilities(Integer availabilityId) {
        this.availabilityId = availabilityId;
    }

    public DBMcAvailabilities(Integer availabilityId, String mcVersion, String availability) {
        this.availabilityId = availabilityId;
        this.mcVersion = mcVersion;
        this.availability = availability;
    }

    public Integer getAvailabilityId() {
        return availabilityId;
    }

    public void setAvailabilityId(Integer availabilityId) {
        this.availabilityId = availabilityId;
    }

    public String getMcVersion() {
        return mcVersion;
    }

    public void setMcVersion(String mcVersion) {
        this.mcVersion = mcVersion;
    }

    public String getAvailability() {
        return availability;
    }

    public void setAvailability(String availability) {
        this.availability = availability;
    }

    @XmlTransient
    public Collection<DBMcDependencies> getDBMcDependenciesCollection() {
        return dBMcDependenciesCollection;
    }

    public void setDBMcDependenciesCollection(Collection<DBMcDependencies> dBMcDependenciesCollection) {
        this.dBMcDependenciesCollection = dBMcDependenciesCollection;
    }

    @XmlTransient
    public Collection<DBMcCustomers> getDBMcCustomersCollection() {
        return dBMcCustomersCollection;
    }

    public void setDBMcCustomersCollection(Collection<DBMcCustomers> dBMcCustomersCollection) {
        this.dBMcCustomersCollection = dBMcCustomersCollection;
    }

    public DBMcReleases getReleaseId() {
        return releaseId;
    }

    public void setReleaseId(DBMcReleases releaseId) {
        this.releaseId = releaseId;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (availabilityId != null ? availabilityId.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof DBMcAvailabilities)) {
            return false;
        }
        DBMcAvailabilities other = (DBMcAvailabilities) object;
        if ((this.availabilityId == null && other.availabilityId != null) || (this.availabilityId != null && !this.availabilityId.equals(other.availabilityId))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "com.anritsu.mcreleaseportal.dbconnection.dbconnection.beans.DBMcAvailabilities[ availabilityId=" + availabilityId + " ]";
    }
    
}
