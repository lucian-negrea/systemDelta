/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.anritsu.mcrepositorymanager.dbbeans;

import java.io.Serializable;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlRootElement;

/**
 *
 * @author ro100051
 */
@Entity
@Table(name = "mc_customers")
@XmlRootElement
@NamedQueries({
    @NamedQuery(name = "DBMcCustomers.findAll", query = "SELECT d FROM DBMcCustomers d"),
    @NamedQuery(name = "DBMcCustomers.findByCustomerId", query = "SELECT d FROM DBMcCustomers d WHERE d.customerId = :customerId"),
    @NamedQuery(name = "DBMcCustomers.findByCustomerName", query = "SELECT d FROM DBMcCustomers d WHERE d.customerName = :customerName")})
public class DBMcCustomers implements Serializable {

    private static final long serialVersionUID = 1L;
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Basic(optional = false)
    @Column(name = "customer_id")
    private Integer customerId;
    @Column(name = "customer_name")
    private String customerName;
    @JoinColumn(name = "availability_id", referencedColumnName = "availability_id")
    @ManyToOne
    private DBMcAvailabilities availabilityId;

    public DBMcCustomers() {
    }

    public DBMcCustomers(Integer customerId) {
        this.customerId = customerId;
    }

    public Integer getCustomerId() {
        return customerId;
    }

    public void setCustomerId(Integer customerId) {
        this.customerId = customerId;
    }

    public String getCustomerName() {
        return customerName;
    }

    public void setCustomerName(String customerName) {
        this.customerName = customerName;
    }

    public DBMcAvailabilities getAvailabilityId() {
        return availabilityId;
    }

    public void setAvailabilityId(DBMcAvailabilities availabilityId) {
        this.availabilityId = availabilityId;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (customerId != null ? customerId.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof DBMcCustomers)) {
            return false;
        }
        DBMcCustomers other = (DBMcCustomers) object;
        if ((this.customerId == null && other.customerId != null) || (this.customerId != null && !this.customerId.equals(other.customerId))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "com.anritsu.mcreleaseportal.dbconnection.dbconnection.beans.DBMcCustomers[ customerId=" + customerId + " ]";
    }
    
}
